Am citit de la tastatura siruri de caractere acolo unde erau adrese IP, si un numar intreg pentru MASK_2 si N. 
In rezolvarea task-urilor, am folosit o functie de conversie pentru a trece de la sir de caractere la un unsigned int pentru fiecare adresa IP, si o alta functie de conversie pentru a trece de la o masca de tipul lui MASK_2 la un unsigned int. 

Task 0
Am afisat efectiv sirul de caractere IP_1, urmat de '/' si, mai apoi, de masca MASK_2, folosind printf si formatarea specifica.

Task 1
Am transformat MASK_2 intr-un unsigned int, folosind functia de conversie enuntata anterior. Pentru a o afisa in forma IPv4, am despartit numarul in 4 bucati de cate 8 octeti, calculand cate un rezultat pentru fiecare grupare de 8 octeti (folosind masti), si shiftand corespunzator aceste rezultate la dreapta, cu 24, 16, 8 si respectiv 0 pozitii.

Task 2
Am transformat MASK_1 in unsigned int si am printat-o sub forma de IPv4 in baza 8 si baza 16 folosind acceasi metoda ca la task-ul 1, doar schimband formatul de la functia printf.

Task 3
Am transformat in unsigned int IP-ul si masca, si am facut un & intre ele, pentru a obtine adresa de retea. Am afisat sub forma de IPv4, la fel ca la task-ul 1, acea adresa de retea.

Task 4
Am transformat in unsigned int IP-ul si masca, facand | intre IP-ul in forma decimala si complementul (~) mastii. Am afisat sub forma de IPv4 la fel.

Task 5
Am obtinut adresele de retea ale celor doua IP-uri si le-am comparat in forma decimala. Daca erau egale, insemna ca cele 2 IP-uri fac parte din aceeasi retea.

Task 6
Am obtinut forma decimala (unsigned int) a mastii MASK_1, iar corectitudinea ei am stabilit-o cu o functie. Am facut, in aceasta, complementul mastii, si am facut & intre acest complement si complementul+1. Daca rezultatul era diferit de 0, insemna ca masca nu este corecta, si daca rezultatul era 0, insemna ca masca este corecta.

Task 7
Am obtinut forma de unsigned int a mastii MASK_1, si i-am verificat corectitudinea. Daca era sub forma de masca, am afisat sirul de caractere efectiv. Daca nu, am cautat pozitia celui mai semnificativ 0 (cu un i de la 31 la 0, cautand unde masca & (1<<i) era 0), si, cu un j de la pozitia obtinuta -1, am setat toti bitii 0 (daca masca & (1<<j) era diferit de 0, scadeam din masca valoarea lui 1<<j)

Task 8
Am obtinut forma de unsigned int a mastii, dupa care am impartit acel numar in 4 grupuri de cate 8 octeti, similar cu metoda de la task 1, doar ca am afisat in loc de numarul obtinut in grup, scrierea sa in baza 2, astfel: (number & (1 << i)) >> i, unde i parcurgea cei 8 biti ai numarului dintr-un grup.

Task 9
Am obtinut forma decimala a lui IP_2. Pentru fiecare adresa dintre cele N, care erau sub forma unui sir de caractere adresa/masca, am separat adresa si masca, am obtinut formele lor decimale, si am calculat adresa de retea corespunzatoare. De asemenea, impreuna cu masca separata anterior, am calculat adresa de retea a lui IP_2.
In final, daca adresele de retea erau egale, insemna ca IP_2 si adresa respectiva din cele N faceau parte din aceeasi retea, si afisam indicele cautat.
